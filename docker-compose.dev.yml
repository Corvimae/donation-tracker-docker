version: '3.7'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "pip install -r requirements.txt && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      ./.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/tracker/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - ./django-donation-tracker:/usr/src/app/django-donation-tracker
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "pip install -r requirements.txt && celery -A tracker_project worker -l info"
    env_file:
      ./.env
    restart: unless-stopped
    volumes:
      - ./django-donation-tracker:/usr/src/app/django-donation-tracker
    depends_on:
      - backend
      - rabbitmq
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "pip install -r requirements.txt && celery -A tracker_project beat -l info"
    env_file:
      ./.env
    restart: unless-stopped
    volumes:
      - ./django-donation-tracker:/usr/src/app/django-donation-tracker
    depends_on:
      - backend
      - rabbitmq
      - redis

  tracker: # lie for nginx' benefit
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "cd django-donation-tracker && yarn && yarn start --port 8000 --host 0.0.0.0"
    env_file:
      ./.env
    environment:
      TRACKER_HOST: http://backend:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/tracker/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - ./django-donation-tracker:/usr/src/app/django-donation-tracker
    depends_on:
      - backend

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/tracker/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - tracker

  db:
    image: postgres:12-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=tracker
      - POSTGRES_PASSWORD=deadbeef
      - POSTGRES_DB=donations

  redis:
    image: "redis:alpine"

  rabbitmq:
    image: "rabbitmq:alpine"
    volumes:
      - rabbitmq_etc:/etc/rabbitmq/
      - rabbitmq_lib:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password

volumes:
  db_data:
  rabbitmq_etc:
  rabbitmq_lib:
  rabbitmq_log:
